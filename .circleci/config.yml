### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.2.0' resolved to 'circleci/slack@3.2.0'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write package cache key
    - restore_cache:
        key: cache000-package-7dba067bd8fa8ed3713a302f32a1321f5fa472a9-{{checksum ".buildcache/cache-keys/package-7dba067bd8fa8ed3713a302f32a1321f5fa472a9"}}
    - restore_cache:
        key: cache000-package-5d2c2425fb4c2fc52b2af8d23e8a947aecd4208d-{{checksum ".buildcache/cache-keys/package-5d2c2425fb4c2fc52b2af8d23e8a947aecd4208d"}}
    - restore_cache:
        key: cache000-package-19f153e4efb8cdbeded0a0757a3e2dfee5ba1394-{{checksum ".buildcache/cache-keys/package-19f153e4efb8cdbeded0a0757a3e2dfee5ba1394"}}
    - restore_cache:
        key: cache000-package-cf4e038c3c342aa7912b7cda01eba599d232fb5c-{{checksum ".buildcache/cache-keys/package-cf4e038c3c342aa7912b7cda01eba599d232fb5c"}}
    - restore_cache:
        key: cache000-package-10095dd5bcfa6e9ee99f574f4aed705e388d6172-{{checksum ".buildcache/cache-keys/package-10095dd5bcfa6e9ee99f574f4aed705e388d6172"}}
    - restore_cache:
        key: cache000-package-1c1142138a51cf28b772e5400a7cf06ac3346556-{{checksum ".buildcache/cache-keys/package-1c1142138a51cf28b772e5400a7cf06ac3346556"}}
    - restore_cache:
        key: cache000-package-97cd460c05134c416d52c38ea1def19b15e0bdc8-{{checksum ".buildcache/cache-keys/package-97cd460c05134c416d52c38ea1def19b15e0bdc8"}}
    - restore_cache:
        key: cache000-package-0f82b31741837ec50e2258df8beb1871b2aa899e-{{checksum ".buildcache/cache-keys/package-0f82b31741837ec50e2258df8beb1871b2aa899e"}}
    - restore_cache:
        key: cache000-package-d16f32316eb140409354fdc79b01166fb734afcc-{{checksum ".buildcache/cache-keys/package-d16f32316eb140409354fdc79b01166fb734afcc"}}
    - restore_cache:
        key: cache000-package-083fb006626513583df1a5503363928e491c46f3-{{checksum ".buildcache/cache-keys/package-083fb006626513583df1a5503363928e491c46f3"}}
    - restore_cache:
        key: cache000-package-791ec89abb417596053a3487e86238f8f7a2deea-{{checksum ".buildcache/cache-keys/package-791ec89abb417596053a3487e86238f8f7a2deea"}}
    - restore_cache:
        key: cache000-package-8122ecf6a2c41286a0f1252f8079d84304da8740-{{checksum ".buildcache/cache-keys/package-8122ecf6a2c41286a0f1252f8079d84304da8740"}}
    - restore_cache:
        key: cache000-package-4cd3fe1d356599a22b60765462087da6ba812cd4-{{checksum ".buildcache/cache-keys/package-4cd3fe1d356599a22b60765462087da6ba812cd4"}}
    - restore_cache:
        key: cache000-package-0c960a3d83c10775dcf760e05f8e781f1c854b86-{{checksum ".buildcache/cache-keys/package-0c960a3d83c10775dcf760e05f8e781f1c854b86"}}
    - restore_cache:
        key: cache000-package-93fee1db1daca565af09d1f24bb9ec09d09b9d95-{{checksum ".buildcache/cache-keys/package-93fee1db1daca565af09d1f24bb9ec09d09b9d95"}}
    - restore_cache:
        key: cache000-package-1f264d81ca6dc6f856d9e557ef7dd37725247bac-{{checksum ".buildcache/cache-keys/package-1f264d81ca6dc6f856d9e557ef7dd37725247bac"}}
    - run:
        command: ls -lahR .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: tar -czf packages.tar.gz .buildcache/packages
    - store_artifacts:
        destination: packages.tar.gz
        path: packages.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 5d2c2425fb4c2fc52b2af8d23e8a947aecd4208d
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-5d2c2425fb4c2fc52b2af8d23e8a947aecd4208d-{{checksum ".buildcache/cache-keys/package-5d2c2425fb4c2fc52b2af8d23e8a947aecd4208d"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_darwin_amd64.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_darwin_amd64.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_948b_{{checksum ".buildcache/cache-keys/copy-source-948b79f05355cb5d1f37f231e53fc0723f2302a6"}}
        - cache000-warm-go-build-vendor-cache_3830_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-38306c8570075250506a515a20f34b5126c5837e"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-5d2c2425fb4c2fc52b2af8d23e8a947aecd4208d-{{checksum ".buildcache/cache-keys/package-5d2c2425fb4c2fc52b2af8d23e8a947aecd4208d"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-38306c8570075250506a515a20f34b5126c5837e.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-38306c8570075250506a515a20f34b5126c5837e-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_3830_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-38306c8570075250506a515a20f34b5126c5837e"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-38306c8570075250506a515a20f34b5126c5837e.tar.gz
  windows_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 93fee1db1daca565af09d1f24bb9ec09d09b9d95
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-93fee1db1daca565af09d1f24bb9ec09d09b9d95-{{checksum ".buildcache/cache-keys/package-93fee1db1daca565af09d1f24bb9ec09d09b9d95"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_windows_386.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_windows_386.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_8214_{{checksum ".buildcache/cache-keys/copy-source-8214166acaf73767767dd4981da1efef3f35bea9"}}
        - cache000-warm-go-build-vendor-cache_1da1_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1da13aa79cf3ca9b34ff2e38e2176999b19bf960"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-93fee1db1daca565af09d1f24bb9ec09d09b9d95-{{checksum ".buildcache/cache-keys/package-93fee1db1daca565af09d1f24bb9ec09d09b9d95"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-1da13aa79cf3ca9b34ff2e38e2176999b19bf960.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-1da13aa79cf3ca9b34ff2e38e2176999b19bf960-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_1da1_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1da13aa79cf3ca9b34ff2e38e2176999b19bf960"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-1da13aa79cf3ca9b34ff2e38e2176999b19bf960.tar.gz
  install-ui-dependencies:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
        paths:
        - ui/node_modules
  linux_arm64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: d16f32316eb140409354fdc79b01166fb734afcc
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-d16f32316eb140409354fdc79b01166fb734afcc-{{checksum ".buildcache/cache-keys/package-d16f32316eb140409354fdc79b01166fb734afcc"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_linux_arm64.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_linux_arm64.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_db18_{{checksum ".buildcache/cache-keys/copy-source-db180a8ffb9c282015c63ad2827159ceeb27060c"}}
        - cache000-warm-go-build-vendor-cache_3d53_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-3d53a16a300d170d26c5ae1a1310cc5c40198b67"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-d16f32316eb140409354fdc79b01166fb734afcc-{{checksum ".buildcache/cache-keys/package-d16f32316eb140409354fdc79b01166fb734afcc"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-3d53a16a300d170d26c5ae1a1310cc5c40198b67.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-3d53a16a300d170d26c5ae1a1310cc5c40198b67-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_3d53_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-3d53a16a300d170d26c5ae1a1310cc5c40198b67"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-3d53a16a300d170d26c5ae1a1310cc5c40198b67.tar.gz
  test-ui:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          set -x

          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
            | apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
            | tee /etc/apt/sources.list.d/google-chrome.list
          apt-get update
          apt-get -y install google-chrome-stable
          rm /etc/apt/sources.list.d/google-chrome.list
          rm -rf /var/lib/apt/lists/* /var/cache/apt/*

          # Add ./bin to the PATH so vault binary can be run by Ember tests
          export PATH="${PWD}/bin:${PATH}"

          # Run Ember tests
          cd ui
          mkdir -p test-results/qunit
          yarn test:oss
        name: Test UI
    - store_artifacts:
        path: ui/test-results
    - store_test_results:
        path: ui/test-results
  linux_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 0f82b31741837ec50e2258df8beb1871b2aa899e
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-0f82b31741837ec50e2258df8beb1871b2aa899e-{{checksum ".buildcache/cache-keys/package-0f82b31741837ec50e2258df8beb1871b2aa899e"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_linux_arm.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_linux_arm.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_370f_{{checksum ".buildcache/cache-keys/copy-source-370ff09d97490bcfbfbaf940fa08d3420a27d318"}}
        - cache000-warm-go-build-vendor-cache_c5b5_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-c5b5fe7db5d96e53eb07a75aa90a8cd1cfc8bd51"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-0f82b31741837ec50e2258df8beb1871b2aa899e-{{checksum ".buildcache/cache-keys/package-0f82b31741837ec50e2258df8beb1871b2aa899e"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-c5b5fe7db5d96e53eb07a75aa90a8cd1cfc8bd51.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-c5b5fe7db5d96e53eb07a75aa90a8cd1cfc8bd51-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_c5b5_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-c5b5fe7db5d96e53eb07a75aa90a8cd1cfc8bd51"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-c5b5fe7db5d96e53eb07a75aa90a8cd1cfc8bd51.tar.gz
  test-ui-browserstack:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Add ./bin to the PATH so vault binary can be found.
          export PATH="${PWD}"/bin:${PATH}
          make test-ui-browserstack
        name: Run Browserstack Tests
  darwin_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 7dba067bd8fa8ed3713a302f32a1321f5fa472a9
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-7dba067bd8fa8ed3713a302f32a1321f5fa472a9-{{checksum ".buildcache/cache-keys/package-7dba067bd8fa8ed3713a302f32a1321f5fa472a9"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_darwin_386.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_darwin_386.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_2ac8_{{checksum ".buildcache/cache-keys/copy-source-2ac8dd0bfbcc0c10c7a29eade0e8cb87c16a09e9"}}
        - cache000-warm-go-build-vendor-cache_a4c6_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-a4c6b877aeccec7aaf8d528d1b239254acea0823"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-7dba067bd8fa8ed3713a302f32a1321f5fa472a9-{{checksum ".buildcache/cache-keys/package-7dba067bd8fa8ed3713a302f32a1321f5fa472a9"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-a4c6b877aeccec7aaf8d528d1b239254acea0823.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-a4c6b877aeccec7aaf8d528d1b239254acea0823-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_a4c6_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-a4c6b877aeccec7aaf8d528d1b239254acea0823"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-a4c6b877aeccec7aaf8d528d1b239254acea0823.tar.gz
  build-go-dev:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - attach_workspace:
        at: .
    - run:
        command: |
          # Move dev UI assets to expected location
          rm -rf ./pkg
          mkdir ./pkg

          # Build dev binary
          make ci-bootstrap dev
        name: Build dev binary
    - persist_to_workspace:
        paths:
        - bin
        root: .
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.14.7
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  algolia-index:
    docker:
    - image: node:12
    steps:
    - checkout
    - run:
        command: |
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not indexing Algolia"
            exit 0
          fi
          cd website/
          npm install
          node scripts/index_search_content.js
        name: Push content to Algolia Index
  linux_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 1c1142138a51cf28b772e5400a7cf06ac3346556
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-1c1142138a51cf28b772e5400a7cf06ac3346556-{{checksum ".buildcache/cache-keys/package-1c1142138a51cf28b772e5400a7cf06ac3346556"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_linux_386.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_linux_386.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_1b7d_{{checksum ".buildcache/cache-keys/copy-source-1b7df19ee44c9174b8be67aa6d81e24b04d12505"}}
        - cache000-warm-go-build-vendor-cache_be08_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-be081d5d75f0d4be93eae6ea865f6a89f2a6970e"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-1c1142138a51cf28b772e5400a7cf06ac3346556-{{checksum ".buildcache/cache-keys/package-1c1142138a51cf28b772e5400a7cf06ac3346556"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-be081d5d75f0d4be93eae6ea865f6a89f2a6970e.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-be081d5d75f0d4be93eae6ea865f6a89f2a6970e-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_be08_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-be081d5d75f0d4be93eae6ea865f6a89f2a6970e"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-be081d5d75f0d4be93eae6ea865f6a89f2a6970e.tar.gz
  freebsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 19f153e4efb8cdbeded0a0757a3e2dfee5ba1394
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-19f153e4efb8cdbeded0a0757a3e2dfee5ba1394-{{checksum ".buildcache/cache-keys/package-19f153e4efb8cdbeded0a0757a3e2dfee5ba1394"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_freebsd_386.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_freebsd_386.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_5c2a_{{checksum ".buildcache/cache-keys/copy-source-5c2a10c6de9c3d4027e1095d18041257f4d7e943"}}
        - cache000-warm-go-build-vendor-cache_5729_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-5729c8912b854bf9b6cf8a0dc67e28bbd8ab681f"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-19f153e4efb8cdbeded0a0757a3e2dfee5ba1394-{{checksum ".buildcache/cache-keys/package-19f153e4efb8cdbeded0a0757a3e2dfee5ba1394"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-5729c8912b854bf9b6cf8a0dc67e28bbd8ab681f.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-5729c8912b854bf9b6cf8a0dc67e28bbd8ab681f-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_5729_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-5729c8912b854bf9b6cf8a0dc67e28bbd8ab681f"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-5729c8912b854bf9b6cf8a0dc67e28bbd8ab681f.tar.gz
  test-go-race:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "-race" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
              -race \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.14.7
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  freebsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: cf4e038c3c342aa7912b7cda01eba599d232fb5c
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-cf4e038c3c342aa7912b7cda01eba599d232fb5c-{{checksum ".buildcache/cache-keys/package-cf4e038c3c342aa7912b7cda01eba599d232fb5c"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_freebsd_amd64.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_freebsd_amd64.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_8e8e_{{checksum ".buildcache/cache-keys/copy-source-8e8e6a6afab100d225e1419642f61863b9e2bf8d"}}
        - cache000-warm-go-build-vendor-cache_fb9a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fb9a5ac9be401125f9141a649bff22b7f26a1e7b"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-cf4e038c3c342aa7912b7cda01eba599d232fb5c-{{checksum ".buildcache/cache-keys/package-cf4e038c3c342aa7912b7cda01eba599d232fb5c"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-fb9a5ac9be401125f9141a649bff22b7f26a1e7b.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-fb9a5ac9be401125f9141a649bff22b7f26a1e7b-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_fb9a_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-fb9a5ac9be401125f9141a649bff22b7f26a1e7b"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-fb9a5ac9be401125f9141a649bff22b7f26a1e7b.tar.gz
  openbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 8122ecf6a2c41286a0f1252f8079d84304da8740
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-8122ecf6a2c41286a0f1252f8079d84304da8740-{{checksum ".buildcache/cache-keys/package-8122ecf6a2c41286a0f1252f8079d84304da8740"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_openbsd_386.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_openbsd_386.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_ac78_{{checksum ".buildcache/cache-keys/copy-source-ac78ccbf882bd5093c1f11080b6c86824c94d9d5"}}
        - cache000-warm-go-build-vendor-cache_26d1_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-26d1b9d805b71c8fdcb315e9903862d0cbfec92e"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-8122ecf6a2c41286a0f1252f8079d84304da8740-{{checksum ".buildcache/cache-keys/package-8122ecf6a2c41286a0f1252f8079d84304da8740"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-26d1b9d805b71c8fdcb315e9903862d0cbfec92e.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-26d1b9d805b71c8fdcb315e9903862d0cbfec92e-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_26d1_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-26d1b9d805b71c8fdcb315e9903862d0cbfec92e"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-26d1b9d805b71c8fdcb315e9903862d0cbfec92e.tar.gz
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 97cd460c05134c416d52c38ea1def19b15e0bdc8
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-97cd460c05134c416d52c38ea1def19b15e0bdc8-{{checksum ".buildcache/cache-keys/package-97cd460c05134c416d52c38ea1def19b15e0bdc8"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_linux_amd64.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_linux_amd64.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_83e2_{{checksum ".buildcache/cache-keys/copy-source-83e23bfb4502809b345f80221a5688c183d27308"}}
        - cache000-warm-go-build-vendor-cache_0ce8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-0ce8e3ff723f31379bf6955716f58b70f3c5b48b"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-97cd460c05134c416d52c38ea1def19b15e0bdc8-{{checksum ".buildcache/cache-keys/package-97cd460c05134c416d52c38ea1def19b15e0bdc8"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-0ce8e3ff723f31379bf6955716f58b70f3c5b48b.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-0ce8e3ff723f31379bf6955716f58b70f3c5b48b-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_0ce8_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-0ce8e3ff723f31379bf6955716f58b70f3c5b48b"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-0ce8e3ff723f31379bf6955716f58b70f3c5b48b.tar.gz
  website-docker-image:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - setup_remote_docker
    - run:
        command: |
          IMAGE_TAG="$(git rev-list -n1 HEAD -- website/Dockerfile website/package-lock.json)"
          echo "Using $IMAGE_TAG"
          if  [ "$CIRCLE_REPOSITORY_URL" != "git@github.com:hashicorp/vault.git" ]; then
            echo "Not Vault OSS Repo, not building website docker image"
          elif curl https://hub.docker.com/v2/repositories/hashicorp/vault-website/tags/$IMAGE_TAG -fsL > /dev/null; then
              echo "Dependencies have not changed, not building a new website docker image."
          else
              cd website/
              docker build -t hashicorp/vault-website:$IMAGE_TAG .
              docker tag hashicorp/vault-website:$IMAGE_TAG hashicorp/vault-website:latest
              docker login -u $WEBSITE_DOCKER_USER -p $WEBSITE_DOCKER_PASS
              docker push hashicorp/vault-website
          fi
        name: Build Docker Image if Necessary
  solaris_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 0c960a3d83c10775dcf760e05f8e781f1c854b86
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-0c960a3d83c10775dcf760e05f8e781f1c854b86-{{checksum ".buildcache/cache-keys/package-0c960a3d83c10775dcf760e05f8e781f1c854b86"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_solaris_amd64.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_solaris_amd64.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_f996_{{checksum ".buildcache/cache-keys/copy-source-f996a2732a6c1085f98ca073e548c35d4e49d383"}}
        - cache000-warm-go-build-vendor-cache_4941_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4941033b883d2fed929c3f3a2b3abd43e75249c0"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-0c960a3d83c10775dcf760e05f8e781f1c854b86-{{checksum ".buildcache/cache-keys/package-0c960a3d83c10775dcf760e05f8e781f1c854b86"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-4941033b883d2fed929c3f3a2b3abd43e75249c0.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-4941033b883d2fed929c3f3a2b3abd43e75249c0-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_4941_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-4941033b883d2fed929c3f3a2b3abd43e75249c0"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-4941033b883d2fed929c3f3a2b3abd43e75249c0.tar.gz
  test-go:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    parallelism: 2
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.14.7
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  test-go-nightly:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - run:
        command: |
          # If the branch being tested starts with ui/ or docs/ we want to exit the job without failing
          [[ "$CIRCLE_BRANCH" = ui/* || "$CIRCLE_BRANCH" = docs/* ]] && {
            # stop the job from this step
            circleci-agent step halt
          }
          # exit with success either way
          exit 0
        name: Check branch name
        working_directory: ~/
    - run:
        command: |
          [ -n "$GO_VERSION" ] || { echo "You must set GO_VERSION"; exit 1; }
          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          GOPATH="/go"
          mkdir $GOPATH 2>/dev/null || { sudo mkdir $GOPATH && sudo chmod 777 $GOPATH; }
          echo "export GOPATH='$GOPATH'" >> "$BASH_ENV"
          echo "export PATH='$PATH:$GOPATH/bin:/usr/local/go/bin'" >> "$BASH_ENV"

          echo "$ go version"
          go version
        name: Setup Go
        working_directory: ~/
    - checkout
    - run:
        command: |
          TZ=GMT date '+%Y%m%d' > /tmp/go-cache-key
        name: Compute test cache key
    - restore_cache:
        keys:
        - go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
    - run:
        command: |
          set -x

          case "" in
          *-race*) VAULT_CI_GO_TEST_RACE=1;;
          esac

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            GOCACHE=/tmp/go-cache \
            VAULT_TEST_LOG_DIR=/tmp/testlogs \
            gotestsum --format=short-verbose \
              --junitfile test-results/go-test/results.xml \
              --jsonfile test-results/go-test/results.json \
              -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 60m
    - save_cache:
        key: go-test-cache-date-v1-{{ checksum "/tmp/go-cache-key" }}
        paths:
        - /tmp/go-cache
        when: always
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: /tmp/testlogs
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: ''
    - GO_VERSION: 1.14.7
    - GO111MODULE: 'off'
    - GOTESTSUM_VERSION: 0.5.2
  netbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 791ec89abb417596053a3487e86238f8f7a2deea
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-791ec89abb417596053a3487e86238f8f7a2deea-{{checksum ".buildcache/cache-keys/package-791ec89abb417596053a3487e86238f8f7a2deea"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_netbsd_amd64.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_netbsd_amd64.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_d910_{{checksum ".buildcache/cache-keys/copy-source-d910cc37ecf25331c53bb5ab27a817d63c36369f"}}
        - cache000-warm-go-build-vendor-cache_9bae_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9bae6e7b584977ea7b1c927c05063f921eb6b859"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-791ec89abb417596053a3487e86238f8f7a2deea-{{checksum ".buildcache/cache-keys/package-791ec89abb417596053a3487e86238f8f7a2deea"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-9bae6e7b584977ea7b1c927c05063f921eb6b859.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-9bae6e7b584977ea7b1c927c05063f921eb6b859-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_9bae_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-9bae6e7b584977ea7b1c927c05063f921eb6b859"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-9bae6e7b584977ea7b1c927c05063f921eb6b859.tar.gz
  openbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 4cd3fe1d356599a22b60765462087da6ba812cd4
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-4cd3fe1d356599a22b60765462087da6ba812cd4-{{checksum ".buildcache/cache-keys/package-4cd3fe1d356599a22b60765462087da6ba812cd4"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_openbsd_amd64.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_openbsd_amd64.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_c407_{{checksum ".buildcache/cache-keys/copy-source-c407468d8a2d3372007f0854b5f7aa142484f73f"}}
        - cache000-warm-go-build-vendor-cache_f3eb_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f3eb0e446e517505d44a4dc41bdaa5afc37f9927"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-4cd3fe1d356599a22b60765462087da6ba812cd4-{{checksum ".buildcache/cache-keys/package-4cd3fe1d356599a22b60765462087da6ba812cd4"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-f3eb0e446e517505d44a4dc41bdaa5afc37f9927.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-f3eb0e446e517505d44a4dc41bdaa5afc37f9927-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_f3eb_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f3eb0e446e517505d44a4dc41bdaa5afc37f9927"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-f3eb0e446e517505d44a4dc41bdaa5afc37f9927.tar.gz
  netbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 083fb006626513583df1a5503363928e491c46f3
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-083fb006626513583df1a5503363928e491c46f3-{{checksum ".buildcache/cache-keys/package-083fb006626513583df1a5503363928e491c46f3"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_netbsd_386.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_netbsd_386.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_1ba9_{{checksum ".buildcache/cache-keys/copy-source-1ba948d5850c8c18cba53445b2d7f179bbb43e1d"}}
        - cache000-warm-go-build-vendor-cache_385c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-385c32eb530f9ccbd253f305f1e448ecc20f30e8"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-083fb006626513583df1a5503363928e491c46f3-{{checksum ".buildcache/cache-keys/package-083fb006626513583df1a5503363928e491c46f3"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-385c32eb530f9ccbd253f305f1e448ecc20f30e8.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-385c32eb530f9ccbd253f305f1e448ecc20f30e8-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_385c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-385c32eb530f9ccbd253f305f1e448ecc20f30e8"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-385c32eb530f9ccbd253f305f1e448ecc20f30e8.tar.gz
  freebsd_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 10095dd5bcfa6e9ee99f574f4aed705e388d6172
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-10095dd5bcfa6e9ee99f574f4aed705e388d6172-{{checksum ".buildcache/cache-keys/package-10095dd5bcfa6e9ee99f574f4aed705e388d6172"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_freebsd_arm.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_freebsd_arm.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_50d1_{{checksum ".buildcache/cache-keys/copy-source-50d1989c99d94e85afe4ff7d66da7b743251cae4"}}
        - cache000-warm-go-build-vendor-cache_d32c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-d32c38a5770d69785d6cf47bee9655bc466ec3f3"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-10095dd5bcfa6e9ee99f574f4aed705e388d6172-{{checksum ".buildcache/cache-keys/package-10095dd5bcfa6e9ee99f574f4aed705e388d6172"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-d32c38a5770d69785d6cf47bee9655bc466ec3f3.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-d32c38a5770d69785d6cf47bee9655bc466ec3f3-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_d32c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-d32c38a5770d69785d6cf47bee9655bc466ec3f3"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-d32c38a5770d69785d6cf47bee9655bc466ec3f3.tar.gz
  windows_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 1f264d81ca6dc6f856d9e557ef7dd37725247bac
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache000-package-1f264d81ca6dc6f856d9e557ef7dd37725247bac-{{checksum ".buildcache/cache-keys/package-1f264d81ca6dc6f856d9e557ef7dd37725247bac"}}
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          # Check the aliases are right, as they are metadata not included in
          # the cache key. If they're wrong, it's time to bust cache.
          for ALIAS in .buildcache/packages/by-alias/local/vault_0.0.0-snapshot+_windows_amd64.zip .buildcache/packages/by-alias/public-hc-releases/vault/vault_0.0.0-snapshot+/vault_0.0.0-snapshot+_windows_amd64.zip ; do
            echo "Checking alias: $ALIAS"
            if ! readlink $ALIAS; then
              echo "Missing alias: $ALIAS"
              echo "Please increment the cache version to fix this issue."
              { { apt-get update && apt-get install -y tree; } > /dev/null 2>&1 && tree .buildcache/packages; } || true
              exit 1
            fi
          done
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-copy-source_044c_{{checksum ".buildcache/cache-keys/copy-source-044c1ad12868e18fe02c3f29c946df079e95fa7f"}}
        - cache000-warm-go-build-vendor-cache_7906_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-79069e4640672e19084d4887a6f3eebe09d04519"}}
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: make -C packages*.lock load-builder-cache
    - run:
        command: make -C packages*.lock package
    - run:
        command: ls -lahR .buildcache/packages
    - save_cache:
        key: cache000-package-1f264d81ca6dc6f856d9e557ef7dd37725247bac-{{checksum ".buildcache/cache-keys/package-1f264d81ca6dc6f856d9e557ef7dd37725247bac"}}
        paths:
        - .buildcache/packages
    - store_artifacts:
        destination: packages
        path: .buildcache/packages
    - run:
        command: |
          if [ -f .buildcache/archives/08-warm-go-build-vendor-cache-79069e4640672e19084d4887a6f3eebe09d04519.tar.gz ]; then
            echo "Builder image already cached, skipping cache step."
            circleci-agent step halt
          fi
        name: Check builder cache status
    - run:
        command: make -f packages*.lock/layer.mk 08-warm-go-build-vendor-cache-79069e4640672e19084d4887a6f3eebe09d04519-save
    - save_cache:
        key: cache000-warm-go-build-vendor-cache_7906_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-79069e4640672e19084d4887a6f3eebe09d04519"}}
        paths:
        - .buildcache/archives/08-warm-go-build-vendor-cache-79069e4640672e19084d4887a6f3eebe09d04519.tar.gz
  pre-flight-checks:
    docker:
    - image: circleci/buildpack-deps
    environment:
    - CCI_VERSION: 0.1.5691
    shell: /usr/bin/env bash -euo pipefail
    steps:
    - checkout
    - run:
        command: |
          export CCI_PATH=/tmp/circleci-cli/$CCI_VERSION
          mkdir -p $CCI_PATH
          NAME=circleci-cli_${CCI_VERSION}_${ARCH}
          URL=$BASE/v${CCI_VERSION}/${NAME}.tar.gz
          curl -sSL $URL \
            | tar --overwrite --strip-components=1 -xz -C $CCI_PATH "${NAME}/circleci"
          # Add circleci to the path for subsequent steps.
          echo "export PATH=$CCI_PATH:\$PATH" >> $BASH_ENV
          # Done, print some debug info.
          set -x
          . $BASH_ENV
          which circleci
          circleci version
        environment:
          ARCH: linux_amd64
          BASE: https://github.com/CircleCI-Public/circleci-cli/releases/download
        name: Install CircleCI CLI
    - run:
        command: make ci-verify
  cache-builder-images:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        - cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        - cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        - cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        - cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        - cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        - cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        - cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
    - run:
        command: |
          if [ -f .buildcache/archives/07-build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: LAYER_SPEC_ID=07-build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7 make -C packages*.lock load-builder-cache
    - run:
        command: make -f packages*.lock/layer.mk 00-base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c-image
    - run:
        command: make -f packages*.lock/layer.mk 01-install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64-image
    - run:
        command: make -f packages*.lock/layer.mk 02-install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f-image
    - run:
        command: make -f packages*.lock/layer.mk 03-set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe-image
    - run:
        command: make -f packages*.lock/layer.mk 04-install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09-image
    - run:
        command: make -f packages*.lock/layer.mk 05-ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b-image
    - run:
        command: make -f packages*.lock/layer.mk 06-build-ui-5fcd74915b08869b856272d3387411d1261f469e-image
    - run:
        command: make -f packages*.lock/layer.mk 07-build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7-image
    - run:
        command: make -f packages*.lock/layer.mk 07-build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7-save
    - save_cache:
        key: cache000-build-static-assets_7c21_{{checksum ".buildcache/cache-keys/build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7"}}
        paths:
        - .buildcache/archives/07-build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7.tar.gz
    - run:
        command: mv .buildcache/archives/07-build-static-assets-7c21467f4fca7255898d0c54159292ccfa87d6f7.tar.gz .buildcache/archives/06-build-ui-5fcd74915b08869b856272d3387411d1261f469e.tar.gz
    - save_cache:
        key: cache000-build-ui_5fcd_{{checksum ".buildcache/cache-keys/build-ui-5fcd74915b08869b856272d3387411d1261f469e"}}
        paths:
        - .buildcache/archives/06-build-ui-5fcd74915b08869b856272d3387411d1261f469e.tar.gz
    - run:
        command: mv .buildcache/archives/06-build-ui-5fcd74915b08869b856272d3387411d1261f469e.tar.gz .buildcache/archives/05-ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b.tar.gz
    - save_cache:
        key: cache000-ui-dependencies_7c1e_{{checksum ".buildcache/cache-keys/ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b"}}
        paths:
        - .buildcache/archives/05-ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b.tar.gz
    - run:
        command: mv .buildcache/archives/05-ui-dependencies-7c1e694ad5c5ec290f4b684b27b53e94b5e6508b.tar.gz .buildcache/archives/04-install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09.tar.gz
    - save_cache:
        key: cache000-install-yarn_985d_{{checksum ".buildcache/cache-keys/install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09"}}
        paths:
        - .buildcache/archives/04-install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09.tar.gz
    - run:
        command: mv .buildcache/archives/04-install-yarn-985d5d3f752a45cd0810fe7307419d816b3ffe09.tar.gz .buildcache/archives/03-set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe.tar.gz
    - save_cache:
        key: cache000-set-workdir_fe53_{{checksum ".buildcache/cache-keys/set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe"}}
        paths:
        - .buildcache/archives/03-set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe.tar.gz
    - run:
        command: mv .buildcache/archives/03-set-workdir-fe5358938453e5f6f63543c5ae1835424c7b8cbe.tar.gz .buildcache/archives/02-install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f.tar.gz
    - save_cache:
        key: cache000-install-go-tools_c2aa_{{checksum ".buildcache/cache-keys/install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f"}}
        paths:
        - .buildcache/archives/02-install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f.tar.gz
    - run:
        command: mv .buildcache/archives/02-install-go-tools-c2aad8477b1bc51dcb25518de1a7c6402dc3941f.tar.gz .buildcache/archives/01-install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64.tar.gz
    - save_cache:
        key: cache000-install-go_597a_{{checksum ".buildcache/cache-keys/install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64"}}
        paths:
        - .buildcache/archives/01-install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64.tar.gz
    - run:
        command: mv .buildcache/archives/01-install-go-597a1a15bf2e74b06883d2b2bb2e7239cb9b9c64.tar.gz .buildcache/archives/00-base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c.tar.gz
    - save_cache:
        key: cache000-base_1a0e_{{checksum ".buildcache/cache-keys/base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c"}}
        paths:
        - .buildcache/archives/00-base-1a0eebdb7c8e017a66a042afd9f319a57d761a4c.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PRODUCT_REVISION: ''
workflows:
  build-release:
    jobs:
    - cache-builder-images:
        filters:
          branches:
            only:
            - /build-.*/
            - /ci.*/
    - darwin_386_package:
        requires:
        - cache-builder-images
    - darwin_amd64_package:
        requires:
        - cache-builder-images
    - freebsd_386_package:
        requires:
        - cache-builder-images
    - freebsd_amd64_package:
        requires:
        - cache-builder-images
    - freebsd_arm_package:
        requires:
        - cache-builder-images
    - linux_386_package:
        requires:
        - cache-builder-images
    - linux_amd64_package:
        requires:
        - cache-builder-images
    - linux_arm_package:
        requires:
        - cache-builder-images
    - linux_arm64_package:
        requires:
        - cache-builder-images
    - netbsd_386_package:
        requires:
        - cache-builder-images
    - netbsd_amd64_package:
        requires:
        - cache-builder-images
    - openbsd_386_package:
        requires:
        - cache-builder-images
    - openbsd_amd64_package:
        requires:
        - cache-builder-images
    - solaris_amd64_package:
        requires:
        - cache-builder-images
    - windows_386_package:
        requires:
        - cache-builder-images
    - windows_amd64_package:
        requires:
        - cache-builder-images
    - bundle-releases:
        requires:
        - darwin_386_package
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
  ci:
    jobs:
    - pre-flight-checks
    - install-ui-dependencies:
        requires:
        - pre-flight-checks
    - build-go-dev:
        requires:
        - pre-flight-checks
    - test-ui:
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-ui-browserstack:
        filters:
          branches:
            ignore: /pull\/[0-9]+/
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-go:
        requires:
        - build-go-dev
    - test-go-race:
        filters:
          branches:
            ignore:
            - /^docs\/.*/
            - /^ui\/.*/
        requires:
        - build-go-dev
    - website-docker-image:
        filters:
          branches:
            only:
            - master
        context: vault-docs
    - algolia-index:
        filters:
          branches:
            only:
            - stable-website
        context: vault-docs
  nightly-cachebuilder:
    jobs:
    - pre-flight-checks
    - test-go-nightly
    triggers:
    - schedule:
        cron: 0 9 * * *
        filters:
          branches:
            only:
            - master
  version: 2
